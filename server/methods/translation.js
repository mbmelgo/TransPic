import Translation, {TranslationSchema} from '/lib/collections/translation.js';
import {Meteor} from 'meteor/meteor';
import {check} from 'meteor/check';

export default function () {
  Meteor.methods({
    'addTranslation'(formData) {

      check(formData, {
        image : [String],
        categoryId : [String],
        afrikaans: String,
        albanian: String,
        amharic: String,
        arabic: String,
        aramaniac: String,
        armenian: String,
        assamese: String,
        aymara: String,
        azerbaijani: String,
        balochi: String,
        bamanankan: String,
        bashkort: String,
        basque: String,
        belarusan: String,
        bengali: String,
        bhojpuri: String,
        bislama: String,
        bosnian: String,
        brahui: String,
        bulgarian: String,
        burmese: String,
        cantonese: String,
        catalan: String,
        cebuano: String,
        chechen: String,
        cherokee: String,
        croatian: String,
        czech: String,
        dakota: String,
        danish: String,
        dari: String,
        dholuo: String,
        dutch: String,
        english: String,
        esperanto: String,
        estonian: String,
        ewe: String,
        finnish: String,
        french: String,
        georgian: String,
        german: String,
        gikuyu: String,
        greek: String,
        guarani: String,
        gujarati: String,
        haitianCreole: String,
        hausa: String,
        hawaiian: String,
        hawaiianCreole: String,
        hebrew: String,
        hiligaynon: String,
        hindi: String,
        hungarian: String,
        icelandic: String,
        igbo: String,
        ilocano: String,
        indonesian: String,
        inuit: String,
        irishGaelic: String,
        italian: String,
        kiche: String,
        kabyle: String,
        kannada: String,
        kashmiri: String,
        kazakh: String,
        kmer: String,
        khoekhoe: String,
        korean: String,
        kurdish: String,
        kyrgyz: String,
        lao: String,
        latin: String,
        latvian: String,
        lingala: String,
        lithuanian: String,
        macedonian: String,
        maithili: String,
        malagasy: String,
        malay: String,
        malayalam: String,
        mandarin: String,
        marathi: String,
        mende: String,
        mongolian: String,
        nahuatl: String,
        navajo: String,
        nepali: String,
        norwegian: String,
        ojibwa: String,
        oriya: String,
        oromo: String,
        pashto: String,
        persian: String,
        polish: String,
        portuguese: String,
        punjabi: String,
        quechua: String,
        romani: String,
        romanian: String,
        russian: String,
        rwanda: String,
        samoan: String,
        sanskrit: String,
        serbian: String,
        shona: String,
        sindhi: String,
        sinhala: String,
        slovak: String,
        slovene: String,
        somali: String,
        spanish: String,
        swahili: String,
        swedish: String,
        tachelhit: String,
        tagalog: String,
        tajiki: String,
        tamil: String,
        tatar: String,
        telugu: String,
        thai: String,
        tibetic: String,
        tigrigna: String,
        tokPisin: String,
        turkish: String,
        turkmen: String,
        ukrainian: String,
        urdu: String,
        uyghur: String,
        uzbek: String,
        vietnamese: String,
        warlpiri: String,
        welsh: String,
        wolof: String,
        xhosa: String,
        yakut: String,
        yiddish: String,
        yoruba: String,
        yucatec: String,
        zapotec: String,
        zulu: String
      });

      let Checker = TranslationSchema.namedContext('myContext');
      let schemaMatched = Checker.validate(formData);

      if(schemaMatched){
        return Translation.insert(formData);
      }

      let messageError = Checker.invalidKeys();

      _.map(messageError, function(o){
        throw new Meteor.Error(Checker.keyErrorMessage(o.name))
      })
    }
  });
}
